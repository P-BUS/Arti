// Top-level build file where you can add configuration options common to all sub-projects/modules.

// applies the Android Gradle plugin to this build
plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id 'com.google.dagger.hilt.android'
    // Add the Google services Gradle plugin
    id "com.google.gms.google-services"
}

/**
 * The android block is where you configure all your Android-specific
 * build options.
 */
android {
    // Use the following syntax to access properties you defined at the project level:
    // rootProject.ext.property_name
    /**
     * compileSdk specifies the Android API level Gradle should use to
     * compile your app. This means your app can use the API features included in
     * this API level and lower.
     */
    compileSdk rootProject.ext.sdkVersion

    /**
     * The defaultConfig block encapsulates default settings and entries for all
     * build variants and can override some attributes in main/AndroidManifest.xml
     * dynamically from the build system. You can configure product flavors to override
     * these values for different versions of your app.
     */
    defaultConfig {
        // Uniquely identifies the package for publishing.
        applicationId "com.example.arti"
        // Defines the minimum API level required to run the app.
        minSdk rootProject.ext.minSdkVersion
        // Specifies the API level used to test the app.
        targetSdk rootProject.ext.targetSdkVersion
        // Defines the version number of your app.
        versionCode = rootProject.ext.versionCode
        // Defines a user-friendly version name for your app.
        versionName = rootProject.ext.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildFeatures {
            viewBinding = true
            dataBinding = true
        }
    }

    /**
     * The buildTypes block is where you can configure multiple build types.
     * By default, the build system defines two build types: debug and release. The
     * debug build type is not explicitly shown in the default build configuration,
     * but it includes debugging tools and is signed with the debug key. The release
     * build type applies ProGuard settings and is not signed by default.
     */
    buildTypes {
        /**
         * By default, Android Studio configures the release build type to enable code
         * shrinking, using minifyEnabled, and specifies the default ProGuard rules file.
         */
        release {
            minifyEnabled true // Enables code shrinking for the release build type.
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

/**
 * The dependencies block in the module-level build configuration file
 * specifies dependencies required to build only the module itself.
 * To learn more, go to Add build dependencies.
 */
dependencies {
    // Use the following syntax to access properties you defined at the project level:
    // rootProject.ext.property_name
    implementation "androidx.core:core-ktx:${rootProject.ext.androidCoreVersion}"
    implementation "androidx.appcompat:appcompat:${rootProject.ext.appcompatVersion}"
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'com.google.code.gson:gson:2.10'

    // Firebase authentication
    implementation 'com.firebaseui:firebase-ui-auth:7.2.0'
    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:31.1.1')
    // Add the dependency for the Firebase Authentication library
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-auth-ktx'
    implementation 'androidx.annotation:annotation:1.5.0'
    // Also add the dependency for the Google Play services library and specify its version
    implementation 'com.google.android.gms:play-services-auth:20.4.0'
    implementation 'androidx.work:work-runtime-ktx:2.7.1'

    def lifecycle_version = "2.5.1"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"

    // Navigation component
    implementation "androidx.navigation:navigation-fragment-ktx:${rootProject.ext.nav_version}"
    implementation "androidx.navigation:navigation-ui-ktx:${rootProject.ext.nav_version}"

    // Work manager
    implementation "androidx.work:work-runtime-ktx:${rootProject.ext.work_version}"

    // Moshi
    implementation 'com.squareup.moshi:moshi-kotlin:1.14.0'
    // Retrofit with Moshi Converter
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.10'

    // Room
    def room_version = "2.4.3"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    // DataStore
    implementation "androidx.datastore:datastore-preferences:1.0.0"

    // Coil
    implementation 'io.coil-kt:coil:2.2.2'

    // Hilt
    implementation "com.google.dagger:hilt-android:${rootProject.ext.hilt_version}"
    kapt "com.google.dagger:hilt-compiler:${rootProject.ext.hilt_version}"
    def viewModelHiltVersion = "1.0.0-alpha03"
    // implementation "androidx.hilt:hilt-lifecycle-viewmodel:$viewModelHiltVersion"
    kapt 'androidx.hilt:hilt-compiler:1.0.0'
    implementation 'androidx.hilt:hilt-navigation-fragment:1.0.0'
}

// Allow references to generated code
kapt {
    correctErrorTypes true
}